/**
* This code was generated by v0 by Vercel.
* @see https://v0.dev/t/EnoONmSkqIx
* Documentation: https://v0.dev/docs#integrating-generated-code-into-your-nextjs-app
*/

/** Add fonts into your Next.js project:

import { Rethink_Sans } from 'next/font/google'
import { DM_Sans } from 'next/font/google'

rethink_sans({
  subsets: ['latin'],
  display: 'swap',
})

dm_sans({
  subsets: ['latin'],
  display: 'swap',
})

To read more about using these font, please visit the Next.js documentation:
- App Directory: https://nextjs.org/docs/app/building-your-application/optimizing/fonts
- Pages Directory: https://nextjs.org/docs/pages/building-your-application/optimizing/fonts
**/
"use client"

import { useState } from "react"
import { Button } from "@/components/ui/button"

export function Component() {
  const [solution, setSolution] = useState("")
  const [isCorrect, setIsCorrect] = useState(false)
  const handleSubmit = (e) => {
    e.preventDefault()
    const correctSolution = `
def fibonacci(n):
    a, b = 0, 1
    sequence = []
    while len(sequence) < n:
        sequence.append(a)
        a, b = b, a + b
    return sequence
`
    if (solution.trim() === correctSolution.trim()) {
      setIsCorrect(true)
    } else {
      setIsCorrect(false)
    }
  }
  return (
    (<div
      className="flex flex-col items-center justify-center min-h-screen bg-background">
      <div className="max-w-2xl w-full px-6 py-8 bg-card rounded-lg shadow-lg">
        <div className="space-y-4">
          <h1 className="text-3xl font-bold text-card-foreground">Programming Challenge</h1>
          <p className="text-muted-foreground">Solve the following programming problem and submit your solution.</p>
          <div className="bg-muted p-4 rounded-md">
            <h2 className="text-xl font-semibold text-card-foreground mb-2">Problem: Fibonacci Sequence</h2>
            <p className="text-muted-foreground">
              Write a Python function that generates the Fibonacci sequence up to a given number of terms.
            </p>
            <div className="bg-background p-4 rounded-md mt-4">
              <pre className="text-card-foreground font-mono">
                <code>{`
def fibonacci(n):
    a, b = 0, 1
    sequence = []
    while len(sequence) < n:
        sequence.append(a)
        a, b = b, a + b
    return sequence
                  `}</code>
              </pre>
            </div>
          </div>
          <form onSubmit={handleSubmit} className="space-y-4">
            <div>
              <label htmlFor="solution" className="block text-card-foreground font-medium">
                Your Solution:
              </label>
              <textarea
                id="solution"
                name="solution"
                rows={5}
                value={solution}
                onChange={(e) => setSolution(e.target.value)}
                className="block w-full rounded-md border-input bg-background text-card-foreground focus:border-primary focus:ring-primary"
                placeholder="Enter your solution here..." />
            </div>
            {!isCorrect && (
              <div className="bg-red-500 text-red-50 p-4 rounded-md">
                Your solution is incorrect. Please enter the correct Python code.
              </div>
            )}
            <div className="flex justify-end">
              <Button
                type="submit"
                className="bg-primary text-primary-foreground hover:bg-primary/90 focus:ring-primary">
                Submit
              </Button>
            </div>
          </form>
        </div>
      </div>
    </div>)
  );
}
